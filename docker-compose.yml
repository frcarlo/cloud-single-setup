version: '2'

volumes:
  nextcloud:
  db:
  redisdata:
  portainer:
  mongodb:
  nextcloud-redis:


services:
  vue-admin:
    image: frcarlo/vue-admin
    container_name: VueAdmin
    restart: always
    depends_on:
      - mongodb
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vue-admin.rule=Host(`cloud.local`) && PathPrefix(`/vue-admin`)"
      - "traefik.http.routers.vue-admin.entrypoints=https"
      - "traefik.http.routers.vue-admin.tls=true"
      - "traefik.http.services.vue-admin.loadbalancer.server.port=3002"
      - "traefik.http.routers.vue-admin.service=vue-admin"
      - "traefik.http.middlewares.vue-admin.stripprefix.prefixes=/vue-admin"
      - "traefik.http.routers.vue-admin.middlewares=vue-admin"
    environment:
      VITE_DEV_BASE_URL: /vue-admin
      VITE_LOGIN_URL: /auth/sign_in
      VITE_LOGOUT_URL: /auth/logout
      VITE_API_URL: /api/v1
      USER_EMAIL: frcarlo@gmail.com
      USER_PASSWORD: Enigma17
      USER_FULLNAME: frcarlo@gmail.com
      PORT: 3002
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      GLANCE_URL: "http://glances:61208"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/hostroot:ro

  mongodb:
    container_name: mongodb
    image: mongo:latest
    volumes:
      - mongodb:/data/db

  redis:
    image: redis:latest
    container_name: nextcloud_redis
    restart: always
    networks:
      - default
    volumes:
      - nextcloud-redis:/var/lib/redis
  samba:
    image: dperson/samba
    restart: unless-stopped
    container_name: samba
    ports:
      - "139:139"
      - "445:445"
    command: '-n -u "cmarggarf;marggarf;1000;1000"'
    volumes:
      - /opt/docker-conf/cloud/smb.conf:/etc/samba/smb.conf
      - /opt/data/paperless/consume:/shares/paperless

  db:
    image: mariadb:10.6
    restart: unless-stopped
    container_name: mariadb
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    volumes:
      - /opt/data/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=marggraf
      - MYSQL_PASSWORD=nextcloud
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
    ports:
      - 3306:3306

  app:
    image: nextcloud:latest
    container_name: nextcloud
    restart: unless-stopped
    #ports:
    #  - 90:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nextcloud.rule=Host(`cloud.local`) && PathPrefix(`/files`)"
      - "traefik.http.routers.nextcloud.entrypoints=https"
      - "traefik.http.services.nextcloud.loadbalancer.server.port=80"
      - "traefik.http.routers.nextcloud.service=nextcloud"
      - "traefik.http.routers.nextcloud.tls=true"
      - "traefik.http.routers.nextcloud.middlewares=nextcloud-header,nextcloud-prefix"
      - "traefik.http.middlewares.nextcloud-header.headers.referrerPolicy=no-referrer"
      - "traefik.http.middlewares.nextcloud-header.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.nextcloud-header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.nextcloud-header.headers.stsPreload=true"
      - "traefik.http.middlewares.nextcloud-header.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.nextcloud-header.headers.browserXssFilter=true"
      - "traefik.http.middlewares.nextcloud-header.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.nextcloud-prefix.stripprefix.prefixes=/files"

    links:
      - db
    volumes:
      - /opt/data/paperless/consume:/data/pdf_upload
      - /opt/data/photoprism/import:/data/photos
      - /opt/data/nextcloud:/var/www/html
      - /opt/certs/nextcloud:/etc/ssl/nextcloud
    environment:
      - OVERWRITEWEBROOT=/files
      - REDIS_HOST=redis
      - NEXTCLOUD_ADMIN_PASSWORD=marggraf
      - NEXTCLOUD_ADMIN_USER=admin
      - MYSQL_PASSWORD=nextcloud
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=db

  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data
    container_name: broker

  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.4
    restart: unless-stopped
    command:
      - "gotenberg"
      - "--chromium-disable-routes=true"
    container_name: gotenberg

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped
    container_name: tika

  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    container_name: paperless
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    #ports:
    # - "8000:8000"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.rule=Host(`cloud.local`) && PathPrefix(`/paperless`)"
      - "traefik.http.routers.paperless.entrypoints=https"
      - "traefik.http.routers.paperless.tls=true"
      - "traefik.http.services.paperless.loadbalancer.server.port=8000"
      - "traefik.http.routers.paperless.service=paperless"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://cloud.local:8000" ]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /opt/data/paperless/data:/usr/src/paperless/data
      - /opt/data/paperless/media:/usr/src/paperless/media
      - /opt/data/paperless/export:/usr/src/paperless/export
      - /opt/data/paperless/consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_USE_SSL: "true"
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBENGINE: mariadb
      PAPERLESS_DBHOST: db
      PAPERLESS_DBUSER: paperless # only needed if non-default username
      PAPERLESS_DBPASS: paperless # only needed if non-default password
      PAPERLESS_DBPORT: 3306
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
      PAPERLESS_USE_X_FORWARD_HOST: "true"
      PAPERLESS_USE_X_FORWARD_PORT: "true"
      PAPERLESS_FORCE_SCRIPT_NAME: "/paperless"
      PAPERLESS_STATIC_URL: "/paperless/static/"
      PAPERLESS_CSRF_TRUSTED_ORIGINS: "https://cloud.local"
      PAPERLESS_ADMIN_USER: "admin"
      PAPERLESS_ADMIN_PASSWORD: "admin"

  photoprism:
    ## Use photoprism/photoprism:preview for testing preview builds:
    image: photoprism/photoprism:latest
    restart: unless-stopped
    container_name: photoprism
    #ports:
    # - "2342:2342" # HTTP port (host:container)
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.photoprism.rule=Host(`cloud.local`) && PathPrefix(`/photos`)"
      - "traefik.http.routers.photoprism.entrypoints=https"
      - "traefik.http.routers.photoprism.tls=true"
      - "traefik.http.services.photoprism.loadbalancer.server.port=2342"
      - "traefik.http.routers.photoprism.service=photoprism"
    environment:
      PHOTOPRISM_INIT: "http"
      PHOTOPRISM_DISABLE_TLS: "false"
      PHOTOPRISM_DEFAULT_TLS: "true"
      PHOTOPRISM_TLS_CERT: "/certs/cert.pem"
      PHOTOPRISM_TLS_KEY: "/certs/key.pem"
      PHOTOPRISM_ADMIN_PASSWORD: "d&>WySw3mb4?4?F" # INITIAL PASSWORD FOR "admin" USER, MINIMUM 8 CHARACTERS
      PHOTOPRISM_AUTH_MODE: "password" # authentication mode (public, password)
      PHOTOPRISM_SITE_URL: "http://localhost:2342/photos" # public server URL incl http:// or https:// and /path, :port is optional
      PHOTOPRISM_ORIGINALS_LIMIT: 5000 # file size limit for originals in MB (increase for high-res video)
      PHOTOPRISM_HTTP_COMPRESSION: "gzip" # improves transfer speed and bandwidth utilization (none or gzip)
      PHOTOPRISM_LOG_LEVEL: "DEBUG" # log level: trace, debug, info, warning, error, fatal, or panic
      PHOTOPRISM_READONLY: "false" # do not modify originals directory (reduced functionality)
      PHOTOPRISM_EXPERIMENTAL: "false" # enables experimental features
      PHOTOPRISM_DISABLE_CHOWN: "false" # disables updating storage permissions via chmod and chown on startup
      PHOTOPRISM_DISABLE_WEBDAV: "false" # disables built-in WebDAV server
      PHOTOPRISM_DISABLE_SETTINGS: "false" # disables settings UI and API
      PHOTOPRISM_DISABLE_TENSORFLOW: "false" # disables all features depending on TensorFlow
      PHOTOPRISM_DISABLE_FACES: "false" # disables face detection and recognition (requires TensorFlow)
      PHOTOPRISM_DISABLE_CLASSIFICATION: "false" # disables image classification (requires TensorFlow)
      PHOTOPRISM_DISABLE_RAW: "false" # disables indexing and conversion of RAW files
      PHOTOPRISM_RAW_PRESETS: "false" # enables applying user presets when converting RAW files (reduces performance)
      PHOTOPRISM_JPEG_QUALITY: 90 # a higher value increases the quality and file size of JPEG images and thumbnails (25-100)
      PHOTOPRISM_DETECT_NSFW: "true" # automatically flags photos as private that MAY be offensive (requires TensorFlow)
      PHOTOPRISM_UPLOAD_NSFW: "true" # allows uploads that MAY be offensive (no effect without TensorFlow)
      # PHOTOPRISM_DATABASE_DRIVER: "sqlite"         # SQLite is an embedded database that doesn't require a server
      PHOTOPRISM_DATABASE_DRIVER: "mysql" # use MariaDB 10.5+ or MySQL 8+ instead of SQLite for improved performance
      PHOTOPRISM_DATABASE_SERVER: "db:3306" # MariaDB or MySQL database server (hostname:port)
      PHOTOPRISM_DATABASE_NAME: "photoprism" # MariaDB or MySQL database schema name
      PHOTOPRISM_DATABASE_USER: "photoprism" # MariaDB or MySQL database user name
      PHOTOPRISM_DATABASE_PASSWORD: "d&>WySw3mb4?4?F" # MariaDB or MySQL database user password
      PHOTOPRISM_SITE_CAPTION: "photos@marggraf"
      PHOTOPRISM_SITE_DESCRIPTION: "" # meta site description
      PHOTOPRISM_SITE_AUTHOR: "Christoph Marggraf" # meta site author
      PHOTOPRISM_IMPORT_PATH: "/opt/import"
    working_dir: "/photoprism" # do not change or remove
    ## Storage Folders: "~" is a shortcut for your home directory, "." for the current directory
    volumes:
      - /opt/certs/nextcloud:/certs
      - /etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt
      - /etc/localtime:/etc/localtime:ro
      - "/opt/data/photoprism/storage:/photoprism/storage" # *Writable* storage folder for cache, database, and sidecar files (DO NOT REMOVE)
      - "/opt/data/photoprism/originals:/photoprism/originals" # Original media files (DO NOT REMOVE)
      - "/opt/data/photoprism/import:/opt/import" # Original media files (DO NOT REMOVE)
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    #ports:
    # - 9443:9443
    volumes:
      - portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`cloud.local`) && PathPrefix(`/cluster`)"
      - "traefik.http.routers.portainer.entrypoints=https"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.service=portainer"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.routers.portainer.middlewares=portainer-header,portainer-prefix"
      - "traefik.http.middlewares.portainer-header.headers.referrerPolicy=no-referrer"
      - "traefik.http.middlewares.portainer-header.headers.stsSeconds=15552000"
      - "traefik.http.middlewares.portainer-header.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.portainer-header.headers.stsPreload=true"
      - "traefik.http.middlewares.portainer-header.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.portainer-header.headers.browserXssFilter=true"
      - "traefik.http.middlewares.portainer-header.headers.customRequestHeaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.portainer-prefix.stripprefix.prefixes=/cluster"

  proxy:
    # The official v2 Traefik docker image
    image: traefik:latest
    restart: unless-stopped
    container_name: traefik
    # Enables the web UI and tells Traefik to listen to docker
    command:
      - "--log.level=debug"
      - "--providers.docker.exposedbydefault=false"
      - "--api.insecure=true"
      - "--providers.docker.swarmMode=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http.tls=true"
      - "--providers.file.directory=/configuration/"
      - "--providers.file.watch=true"
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /opt/certs/ca:/usr/local/share/ca-certificates
      - /opt/certs/nextcloud:/certs
      - ./config:/configuration
      - /var/run/docker.sock:/var/run/docker.sock

  glances:
    container_name: glances
    image: joweisberg/glances:latest
    restart: unless-stopped
    pid: host
    network_mode: host

    environment:
      - TZ=Europe/Berlin
      - GLANCES_OPT=--webserver
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/docker/glances:/glances/conf
      - /etc/hostname:/etc/hostname
      - /:/hostroot:ro
